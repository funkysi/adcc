<project default="find_revision">
	<property file="property.xml"/>

	<echo>${trunk}</echo>	
	<echo>${sql.name}</echo>
	
<target name="apache" description="restarts apache">
	<exec executable="service">
		<arg value="httpd"/>
		<arg value="restart"/>
	</exec>
</target>

<target name="download-all" description="download all files from website">
	<exec executable="php">
		<arg value="/var/www/html/private/backup/backupentiresite.php"/>
	</exec>	
</target>
	
<target name="find_revision" depends="subversion-update" description="Sets property 'svn.info.lastRev' to head svn revision">  
	<path id="svnant.libs.path">  
         <fileset dir="lib">  
             <include name="svnant.jar"/>  
             <include name="svnClientAdapter.jar"/>  
         </fileset>  
    </path>  
   
    <!-- Load SvnAnt -->  
    <typedef resource="org/tigris/subversion/svnant/svnantlib.xml" classpathref="svnant.libs.path" />      
   
    <!-- find head revision number, amongst other things. -->  
    <!-- Replace svn_username and svn_password with values appropriate to your system -->  
    <svn username="svn_username" password="svn_password" javahl="false">  
        <info target="." />  
    </svn>  
   
    <!-- Display svn revision number -->  
    <echo>Revision found: ${svn.info.lastRev}</echo>  
	<echo>Revision Date: ${svn.info.lastDate}</echo>
	<echo file="revision2.php">&lt;?php $svnversion = "${svn.info.lastRev}";$svndate = "${svn.info.lastDate}"; ?&gt;</echo>
	<copy todir="${live}/httpdocs/" overwrite="true">
		<fileset file="${trunk}/revision2.php"/>
	</copy>	
</target>

<target name="htaccess" description="htaccess creation">
	<exec executable="wget">
		<arg value="${url}/admin/htaccess.php" />
	</exec>
	<delete file="${basedir}/index.php.1"/>
	<delete file="${basedir}/index.html"/>
</target>

<target name="htaccess-live" description="htaccess creation">
	<exec executable="wget">
		<arg value="${url.live}/admin/htaccess.php" />
	</exec>
	<delete file="${basedir}/index.html"/>
</target>

<target name="images" description="1 copy images from backup">

	<copy todir="${live}/" overwrite="true">
		<fileset file="${backup}/httpdocs/backup/version2/adcc_live.sql" />
	</copy>
	
	<copy todir="${live}/" overwrite="true">
		<fileset file="${backup}/httpdocs/backup/version2/adcc_imgs_site.tar.gz" />
	</copy>
	
	<copy todir="${live}/" overwrite="true">
		<fileset file="${backup}/httpdocs/backup/version2/adcc_live_sm.tar.gz" />
	</copy>
	
	<copy todir="${live}/imgs" overwrite="true">
		<fileset dir="${backup}/httpdocs/imgs" />
	</copy>
</target>

<target name="live" description="Setting up live website step 9 in old build script" depends="live-start,logs-only,mysqld,apache,htaccess-live">
</target>

<target name="live-newsql" description="6 restores database from backups">

	<sql driver="${sql.driver}" url="${sql.live.url}" userid="${sql.user}" password="${sql.pass}" >
		<classpath>
			<pathelement location="${trunk}/lib/mysql-connector-java-3.1.12.jar"/>
		</classpath>
		<transaction>
			drop database ${sql.live.name};
			create database ${sql.live.name};
			use ${sql.live.name};
		</transaction> 
    </sql>
	<exec executable="mysql">
		<arg value="-u${sql.user}"/>
		<arg value="-p${sql.pass}"/>
		<arg value="-e source ${trunk}/db/structure.sql"/>
		<arg value="${sql.live.name}"/>
	</exec>
	<exec executable="mysql">
		<arg value="-u${sql.user}"/>
		<arg value="-p${sql.pass}"/>
		<arg value="-e source ${trunk}/db/.sql4"/>
		<arg value="${sql.live.name}"/>
	</exec>
</target>

<target name="live-noimage" description="15 Setting up live website with no images" depends="live-noimage-start,logs-only,mysqld,apache,htaccess-live">
</target>

<target name="live-noimage-start" description="15 Setting up live website with no images">
	<copy todir="${live}/httpdocs" overwrite="true">
		<fileset dir="${backup}/httpdocs" />
	</copy>
	<chmod perm="777">
	<fileset dir="${live}/httpdocs">
	</fileset>
	<fileset dir="${live}/httpdocs/include">
	</fileset>
	</chmod>
	<copy todir="${live}/httpdocs/include/" overwrite="true">
		<fileset file="${live}/config.php" />
	</copy>
	<delete file="${live}/httpdocs/.htaccess"/>

	<copy todir="${live}/httpdocs/backup/" overwrite="true">
		<fileset file="${trunk}/backup/update.php" />
	</copy>
</target>

<target name="live-sql" description="restores database from backups">

	<sql driver="${sql.driver}" url="${sql.live.url}" userid="${sql.user}" password="${sql.pass}" >
		<classpath>
			<pathelement location="${trunk}/lib/mysql-connector-java-3.1.12.jar"/>
		</classpath>
		<transaction>
			drop database ${sql.live.name};
			create database ${sql.live.name};
			use ${sql.live.name};
		</transaction> 
    </sql>
	<exec executable="mysql">
		<arg value="-u${sql.user}"/>
		<arg value="-p${sql.pass}"/>
		<arg value="-e source ${live}/adcc_live.sql"/>
		<arg value="${sql.live.name}"/>
	</exec>
	<exec executable="mysql">
		<arg value="-u${sql.user}"/>
		<arg value="-p${sql.pass}"/>
		<arg value="-e source ${trunk}/db/.sql4"/>
		<arg value="${sql.live.name}"/>
	</exec>
</target>

<target name="live-start" description="Setting up live website step 9 in old build script">
	<copy todir="${live}/httpdocs" overwrite="true">
		<fileset dir="${backup}/httpdocs" />
	</copy>
	<chmod perm="777">
	<fileset dir="${live}/httpdocs">
	</fileset>
	<fileset dir="${live}/httpdocs/include">
	</fileset>
	</chmod>
	<copy todir="${live}/httpdocs/include/" overwrite="true">
		<fileset file="${live}/config.php" />
	</copy>
	<delete file="${live}/httpdocs/.htaccess"/>
	<copy todir="${live}/httpdocs/imgs">
		<fileset dir="${live}/imgs" />
	</copy>
	<copy todir="${live}/httpdocs/backup/" overwrite="true">
		<fileset file="${trunk}/backup/update.php" />
	</copy>
</target> 

<target name="live-with-sql" depends="live,live-sql" description="9 Builds live-sql and live">
</target>

<target name="logs" description="delete logs" depends="logs-only,apache,mysqld">

<echo>Logs Deleted and recreated</echo>
</target>

<target name="logs-only" description="delete logs" >

	<delete file="${live}/httpdocs/logs/adcclive.funkygoth-error_log"/>
	<delete file="${live}/httpdocs/logs/adcclive.funkygoth-access_log"/>
	<delete file="${trunk}/logs/${sql.name}.funkygoth-error_log"/>
	<delete file="${trunk}/logs/${sql.name}.funkygoth-access_log"/>
</target>

<target name="mysqld" description="restarts mysqld">
	<exec executable="service">
		<arg value="mysqld"/>
		<arg value="restart"/>
	</exec>
</target>

<target name="newsql" description="5 creates new empty database" depends="sql-step-one,sql-structure,sql-sql2">
</target> 

<target name="noimage" depends="find_revision,logs-only,mysqld,apache,htaccess" description="14 Trunk but doesn't copy any new images">
</target>

<target name="sql" description="restores database from backups" depends="sql-step-one,sql-live,sql-sql2,sql-update">
</target>

<target name="sql-live" description="applies backup.sql file">
	<exec executable="mysql">
		<arg value="-u${sql.user}"/>
		<arg value="-p${sql.pass}"/>
		<arg value="-e source ${live}/adcc_live.sql"/>
		<arg value="${sql.name}"/>
	</exec>
</target>

<target name="sql-sql2" description="applies .sql2">
	<exec executable="mysql">
		<arg value="-u${sql.user}"/>
		<arg value="-p${sql.pass}"/>
		<arg value="-e source ${trunk}/db/.sql2"/>
		<arg value="${sql.name}"/>
	</exec>
</target>

<target name="sql-step-one" description="first part of sql build">
		<sql driver="${sql.driver}" url="${sql.url}" userid="${sql.user}" password="${sql.pass}" >
		<classpath>
			<pathelement location="${trunk}/lib/mysql-connector-java-3.1.12.jar"/>
		</classpath>
		<transaction>
			drop database ${sql.name};
			create database ${sql.name};
			use ${sql.name};
		</transaction> 
    </sql>
</target>

<target name="sql-structure" description="applies structure.sql">
	<exec executable="mysql">
		<arg value="-u${sql.user}"/>
		<arg value="-p${sql.pass}"/>
		<arg value="-e source ${trunk}/db/structure.sql"/>
		<arg value="${sql.name}"/>
	</exec>
</target>

<target name="sql-update" description="applies updatedb.sql">
	<exec executable="mysql">
		<arg value="-u${sql.user}"/>
		<arg value="-p${sql.pass}"/>
		<arg value="-e source ${trunk}/db/updatedb.sql"/>
		<arg value="${sql.name}"/>
	</exec>
</target>

<target name="subversion-update">
	<exec executable="svn">
		<arg value="update"/>
		<arg value="${thisdir}"/>
	</exec>
</target>

<target name="trunk" depends="find_revision,trunk-start,logs-only,mysqld,apache,htaccess" description="Setting up trunk website step 8 in old build script">
</target>

<target name="trunk-start"  description="The first bit of trunk setup" depends="delete">
	<copy todir="${trunk}" overwrite="true">
		<fileset dir="${thisdir}" >
			<exclude name="build.xml"/>
			<exclude name="index.htm"/>
			<exclude name="property.xml"/>
			<exclude name="small"/>
			<exclude name="utf8.sh"/>
			<exclude name="update to site.txt"/>
		</fileset>
	</copy>
	<mkdir dir="${trunk}/logs"/>
	<copy todir="${trunk}/imgs">
		<fileset dir="${live}/imgs" />
	</copy>
	<copy tofile="${trunk}/include/config.php">
		<fileset file="${projects}/config.trunk.php" />
	</copy>
	<chmod dir="${trunk}/" perm="777"/>
	<chmod dir="${trunk}/error" perm="777"/>	
	<chmod dir="${trunk}/imgs" perm="777"/>
	<chmod dir="${trunk}/imgs/100" perm="777"/>
	<chmod file="${trunk}/imgs/100/*" perm="777"/>
	<chmod dir="${trunk}/imgs/140" perm="777"/>
	<chmod file="${trunk}/imgs/140/*" perm="777"/>
	<chmod dir="${trunk}/imgs/250" perm="777"/>
	<chmod file="${trunk}/imgs/250/*" perm="777"/>
	<chmod dir="${trunk}/imgs/580" perm="777"/>
	<chmod file="${trunk}/imgs/580/*" perm="777"/>
	<chmod dir="${trunk}/imgs/740" perm="777"/>
	<chmod file="${trunk}/imgs/740/*" perm="777"/>
	<chmod dir="${trunk}/imgs/photos" perm="777"/>
	<chmod dir="${trunk}/imgs/site" perm="777"/>
	<replace file="${trunk}/backup/dailyemail.php" token="@@dbname@@" value="${sql.name}"/>
	<replace file="${trunk}/include/config.php" token="@@backuppath@@" value="${backuppath}" />
	<replace file="${trunk}/error/dellog.php" token="@@path@@" value="${trunk}" />
	<replace file="${trunk}/error/dellog.php" token="@@url@@" value="${url}" />
	<replace file="${trunk}/db/.sql2" token="@@ipaddress@@" value="${url}" />
</target>

<target name="trunk-with-sql" depends="trunk,sql" description="8 Builds trunk-sql and trunk">
</target>

<target name="small" description="reduces size of target build">
	<exec executable="${thisdir}/small">
	</exec>
	<delete includeemptydirs="true">
    		<fileset dir="${trunk}" includes="**/.svn" defaultexcludes="false"/>
  	</delete>
</target>
<target name="utf8" description="checks for BOM">
	<copy todir="${trunk}">
		<fileset file="${thisdir}/utf8.sh" />
	</copy>
	<chmod file="${trunk}/utf8.sh" perm="777"/>
	<exec executable="${trunk}/utf8.sh">
	</exec>
	<delete file="${trunk}/utf8.sh"/>
</target>
<target name="delete" description="deletes target build">
	<delete includeemptydirs="true">
    		<fileset dir="${trunk}" includes="**/*" defaultexcludes="false"/>
  	</delete>
</target>
</project>
